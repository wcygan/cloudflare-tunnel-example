{
  "$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json",
  
  "tasks": {
    // Build tasks
    "build": "docker build -t cloudflare-tunnel-example:latest .",
    "build:multiarch": "docker buildx build --platform linux/amd64,linux/arm64 -t cloudflare-tunnel-example:latest .",
    
    // Container management
    "up": "docker compose up -d",
    "down": "docker compose down",
    "logs": "docker compose logs -f",
    "ps": "docker compose ps",
    
    // Cloudflare tunnel tasks
    "tunnel:login": "docker run --rm -v ./cloudflared:/home/nonroot/.cloudflared cloudflare/cloudflared:latest tunnel login",
    "tunnel:create": "docker run --rm -v ./cloudflared:/home/nonroot/.cloudflared cloudflare/cloudflared:latest tunnel create cloudflare-tunnel-example",
    "tunnel:route": "docker run --rm -v ./cloudflared:/home/nonroot/.cloudflared cloudflare/cloudflared:latest tunnel route dns cloudflare-tunnel-example halibut.cc",
    "tunnel:delete": "docker run --rm -v ./cloudflared:/home/nonroot/.cloudflared cloudflare/cloudflared:latest tunnel delete cloudflare-tunnel-example",
    "tunnel:list": "docker run --rm -v ./cloudflared:/home/nonroot/.cloudflared cloudflare/cloudflared:latest tunnel list",
    "tunnel:cleanup": "docker run --rm -v ./cloudflared:/home/nonroot/.cloudflared cloudflare/cloudflared:latest tunnel cleanup 90b6148f-e83f-4749-8649-a1cad20715aa",
    
    // Verification and diagnostics
    "verify": "deno run --allow-net scripts/verify-endpoints.ts",
    "diagnose": "deno run --allow-run --allow-read --allow-net scripts/diagnose.ts",
    "update-config": "deno run --allow-read --allow-write scripts/update-config.ts",
    
    // Smart deployment commands (recommended)  
    "deploy:full": "deno run --allow-net --allow-run --allow-read --allow-write scripts/deploy.ts",
    "destroy:full": "deno run --allow-run --allow-read --allow-write scripts/destroy.ts",
    "destroy:complete": "deno run --allow-run --allow-read --allow-write scripts/destroy.ts --full",
    
    // Legacy composite tasks (kept for compatibility)
    "tunnel:init": "deno task tunnel:login && deno task tunnel:create && deno task tunnel:route",
    "deploy": "deno task build && deno task up",
    "destroy": "deno task down && deno task tunnel:delete",
    
    // Development tasks
    "dev": "cargo watch -x run",
    "test": "cargo test",
    "lint": "cargo clippy -- -D warnings",
    "fmt": "cargo fmt",
    "fmt:check": "cargo fmt -- --check",
    
    // Testing tasks
    "test:unit": "cargo test",
    "test:config": "deno test tests/config_validation_test.ts --allow-read",
    "test:docker": "deno test tests/docker_integration_test.ts --allow-run --allow-net --allow-read --allow-env",
    "test:integration": "deno run --allow-all scripts/run-integration-tests.ts",
    "test:integration:e2e": "deno run --allow-all scripts/run-integration-tests.ts --e2e",
    "test:all": "deno task test:integration",
    
    // Utility tasks
    "clean": "cargo clean && docker compose down -v",
    "restart": "deno task down && deno task up"
  }
}